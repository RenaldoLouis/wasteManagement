{"version":3,"sources":["Constants/Color.js","Components/Navbar/NavbarStyles.js","Components/Navbar/Navbar.js","Components/Each/Each.js","Constants/Api.js","Apis/DashboardApi.js","Constants/Typography.js","Components/Typography/Typography.js","AppStyles.js","styles/MainPageStyles.js","Components/CardPile/CardPileStyles.js","Constants/NavbarTitle.js","Apis/InboundApi.js","Pages/MainPage.js","Constants/RoutePath.js","Components/Show/Show.js","Pages/DetailPage.js","Components/Form/Form.js","Pages/AddInboundPage.js","Components/PlaceHolder/PlaceHolder.js","Pages/ListPage.js","Components/MenuCard/MenuCardStyles.js","Components/MenuCard/MenuCard.js","Icons/ListOfCompostIcon.js","Icons/ListOfWaste.js","Icons/ListOfInboundIcon.js","Icons/ListOfSalesInvoice.js","Pages/MenuPage.js","Pages/ProcessWastePage.js","Apis/WasteApi.js","Pages/ListOfWastePage.js","Pages/ComposePackage.js","Pages/CreateComposePackage.js","Routes/RoutesConfig.js","App.js","reportWebVitals.js","index.js"],"names":["Color","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","rootBackgroundColor","backgroundColor","Navbar","props","history","useHistory","isNavbarBack","setIsNavbarBack","navbarTitle","useContext","AppContext","classes","anchorEl","setAnchorEl","React","useState","Boolean","_jsx","className","children","AppBar","position","_jsxs","Toolbar","IconButton","edge","color","ChevronLeftIcon","onClick","goBack","MenuIcon","Typography","variant","memo","Each","_ref","render","of","Children","toArray","map","item","index","WASTE_API","BASE_URL","INBOUND_API","DashboardApi","getAllWaste","axios","get","concat","xxLarge","fontSize","lineHeight","letterSpacing","medium","fontFamily","small","xSmall","TypographyType","fontWeight","xxLargeBold","xLarge","large","mediumMedium","mediumSemiBold","smallMedium","smallSemiBold","smallBold","xSmallMedium","xSmallSemiBold","xSmallBold","xxSmall","xxSmallMedium","xxSmallBold","id","style","onMouseOver","onMouseOut","noWrap","type","MUITypography","defaultProps","useAppStyles","p2","padding","p4","p8","p12","p16","p20","p24","p28","p32","p36","p40","p44","p48","pt2","paddingTop","pt4","pt8","pt12","pt16","pt20","pt24","pt28","pt32","pt36","pt40","pt44","pt48","pr2","paddingRight","pr4","pr8","pr12","pr16","pr20","pr24","pr28","pr32","pr36","pr40","pr44","pr48","pl2","paddingLeft","pl4","pl8","pl12","pl16","pl20","pl24","pl28","pl32","pl36","pl40","pl44","pl48","pb2","paddingBottom","pb4","pb8","pb12","pb16","pb20","pb24","pb28","pb32","pb36","pb40","pb44","pb48","m2","margin","m4","m8","m12","m16","m20","m24","m28","m32","m36","m40","m44","m48","mt2","marginTop","mt4","mt8","mt12","mt16","mt20","mt24","mt28","mt32","mt36","mt40","mt44","mt48","mr2","mr4","mr8","mr12","mr16","mr20","mr24","mr28","mr32","mr36","mr40","mr44","mr48","ml2","marginLeft","ml4","ml8","ml12","ml16","ml20","ml24","ml28","ml32","ml36","ml40","ml44","ml48","mb2","marginBottom","mb4","mb8","mb12","mb16","mb20","mb24","mb28","mb32","mb36","mb40","mb44","mb48","gap2","gap","gap4","gap8","gap12","gap16","gap20","gap24","gap28","gap32","gap36","gap40","gap44","gap48","flex","display","flexStart","justifyContent","flexCenter","flexEnd","flexSpaceBetween","alignStart","alignItems","alignCenter","textRight","textAlign","textCenter","flexColumn","flexDirection","fullHeight","height","fullWidth","width","fullHeightvh","colorWhite","colorRed","containerWaste","background","titleDashboardContainer","cirlceCard","borderRadius","cardContainer","NAVBAR_TITLE","InboundApi","getInboundDeliveryData","createInboundDeliveryData","data","post","MainPage","appClasses","setNavbarTitle","inboundDeliveryData","setInboundDeliveryData","wasteData","setWasteData","chartData","setChartData","useEffect","then","res","catch","err","console","log","aggregatedData","MON","rejectedWeight","organicWeight","inorganicWeight","TUE","WED","THU","FRI","SAT","forEach","dayOfWeek","Date","created_at","toLocaleDateString","weekday","toUpperCase","parseInt","rejected_weight","organic_weight","inorganic_weight","transformedData","Object","keys","day","rejectedWeightColor","organicWeightColor","inorganicWeightColor","Grid","container","direction","length","ResponsiveBar","indexBy","top","right","bottom","left","valueScale","indexScale","round","colors","scheme","defs","size","stagger","rotation","lineWidth","fill","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","truncateTickAt","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","role","ariaLabel","ROUTE_PATH","Show","when","otherwise","_children$props","_children$props2","undefined","isTrue","When","Fragment","Else","_ref2","DetailPage","pokemon","setPokemon","param","useParams","getPokemonById","push","pathname","name","abilities","ability","_ability$ability","Form","value","label","placeholder","onChange","error","disabled","TextField","AddInboundPage","Appclasses","deliveryId","setDeliveryId","note","setNote","licensePlate","setLicensePlate","setOrganicWeight","inOrganicWeight","setInOrganicWeight","setRejectredWeight","hardOrganicWeight","setHardOrganicWeight","totalWeight","setTotalWeight","errorExist","setErrorExist","onSubmit","event","preventDefault","objSend","hardOrganic_weight","license_plate","status","e","target","xs","Button","PlaceHolder","text","handleClick","startIcon","AddIcon","ListInboundTable","handleAddInbound","setIsLoading","date","setDate","moment","format","tableData","setTableData","selectedDate","filteredData","filter","handleChangeDate","_Fragment","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","isNaN","hard_organic_weight","scope","ListPage","isLoading","Switch","Route","path","exact","MenuCard","SvgIcon","htmlColor","icon","ListOfCompostIcon","forwardRef","ref","d","ListOfWaste","ListOfInboundIcon","ListOfSalesInvoiceIcon","MenuPage","menuList","DashboardIcon","menu","ProcessWaste","wasteId","setWasteId","setStatus","weight","setWeight","volume","setVolume","temperature","setTemperature","humidity","setHumidity","waterAdded","setWaterAdded","WasteApi","geWasteById","StatusChip","ListOfWastePage","wasteList","setWasteList","open","showMoreOptions","handleClickMoreOption","currentTarget","handleCloseMoreOption","newWasteData","waste","simple_id","curr_waste_status","Box","MoreVert","Menu","keepMounted","onClose","PaperProps","maxHeight","option","MenuItem","ComposeTable","handleAddComposePackage","createData","calories","fat","carbs","protein","rows","ComposePackage","listOfPackageData","setListOfPackageData","CreateComposePackage","MAIN_ROUTES","ProcessWastePage","RenderRoutes","route","i","routes","createContext","App","AppContextValue","Provider","Router","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.2f9748f6.chunk.js","sourcesContent":["export const Color = {\n    neutral: {\n        0: \"#FFFFFF\",\n        10: \"#F1F1F1\",\n        15: \"#ECECEC\",\n        20: \"#E0E0E0\",\n        25: \"#CBCBCB\",\n        30: \"#9EA1A4\",\n        40: \"#7E8286\",\n        50: \"#5E6267\",\n        60: \"#3E4349\",\n        70: \"#34383D\",\n        80: \"#292D31\",\n        90: \"#1F2225\",\n        100: \"#000000\"\n    },\n    primary: {\n        0: \"#DDD5ED\",\n        10: \"#C6B9E1\",\n        20: \"#A996D2\",\n        30: \"#8C72C2\",\n        40: \"#704FB3\",\n        50: \"#532CA4\",\n        60: \"#452589\",\n        70: \"#371D6D\",\n        80: \"#2A1652\",\n        90: \"#1C0F37\",\n        100: \"#110921\"\n    },\n    secondary: {\n        0: \"#CCEFF4\",\n        10: \"#AAE5EC\",\n        20: \"#80D8E3\",\n        30: \"#55CBDA\",\n        40: \"#2ABED0\",\n        50: \"#00B1C7\",\n        60: \"#0094A6\",\n        70: \"#007685\",\n        80: \"#005964\",\n        90: \"#003B42\",\n        100: \"#002328\"\n    },\n    danger: {\n        0: \"#EFCCCD\",\n        10: \"#E4AAAB\",\n        20: \"#D78082\",\n        30: \"#CA5558\",\n        40: \"#BC2A2E\",\n        50: \"#AF0004\",\n        60: \"#920003\",\n        70: \"#750003\",\n        80: \"#580002\",\n        90: \"#3A0001\",\n        100: \"#230001\"\n    },\n    alert: {\n        0: \"#FEFEF6\",\n        10: \"#FBFAD8\",\n        20: \"#F4F29D\",\n        30: \"#EAE63B\",\n        40: \"#C9C751\",\n        50: \"#8F8D38\",\n        60: \"#73712D\",\n        70: \"#585622\",\n        80: \"#3E3C17\",\n        90: \"#26250E\",\n        100: \"#0E0D04\"\n    },\n    success: {\n        0: \"#CCEEE7\",\n        10: \"#AAE2D7\",\n        20: \"#80D4C3\",\n        30: \"#55C6AF\",\n        40: \"#2AB79B\",\n        50: \"#00A987\",\n        60: \"#008D71\",\n        70: \"#00715A\",\n        80: \"#005544\",\n        90: \"#00382D\",\n        100: \"#00221B\"\n    },\n}\n\nexport const BoxShadowColor = {\n    10: \"0px 2px 4px 0px rgba(158, 161, 164, 0.50)\",\n    20: \"0px 4px 8px 0px rgba(158, 161, 164, 0.50)\",\n    30: \"0px 4px 18px 0px rgba(158, 161, 164, 0.50)\"\n}","import { makeStyles } from '@material-ui/core/styles'\nimport { Color } from '../../Constants/Color';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    rootBackgroundColor: {\n        backgroundColor: Color.primary[60]\n    }\n}));","import React, { memo, useContext } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { useStyles } from './NavbarStyles';\nimport { AppContext } from '../../App';\nimport { useHistory } from \"react-router-dom\";\nimport { Color } from '../../Constants/Color';\n\nconst Navbar = (props) => {\n    let history = useHistory();\n\n    const { isNavbarBack, setIsNavbarBack, navbarTitle } = useContext(AppContext)\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar className={classes.rootBackgroundColor} position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        {isNavbarBack ? (\n                            <ChevronLeftIcon onClick={() => history.goBack()} />\n                        ) : (\n                            <MenuIcon />\n                        )}\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {navbarTitle}\n                    </Typography>\n                    {/* <div>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            <MenuItem onClick={handleClose}>Profile</MenuItem>\n                            <MenuItem onClick={handleClose}>My account</MenuItem>\n                        </Menu>\n                    </div> */}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default memo(Navbar);","import { Children, memo } from \"react\";\n\nexport const Each = memo(({ render, of }) => Children.toArray(of.map((item, index) => render(item, index))));","// export const BASE_URL = \"http://localhost:3000/\";\n// export const USER_API = \"apps\";\n// export const BASE_URL = \"https://pokeapi.co/api/v2/\";\n// export const USER_API = \"pokemon/\";\nexport const WASTE_API = \"waste\"\nexport const BASE_URL = \"delterra-02.commsult.dev/api/v1/delterra/\";\nexport const INBOUND_API = \"inboundDelivery\";\nexport const DASHBOARD_API = \"waste\";\n","import axios from 'axios';\nimport { BASE_URL, DASHBOARD_API } from '../Constants/Api';\n\nexport const DashboardApi = {\n    getAllWaste() {\n        return axios.get(`${BASE_URL + DASHBOARD_API}`);\n    },\n}\n\nexport default DashboardApi;","import { Color } from \"./Color\";\n\nconst xxLarge = {\n    fontSize: \"24px\",\n    lineHeight: \"36px\",\n    letterSpacing: \"0.12px\",\n}\n\nconst xLarge = {\n    fontSize: \"20px\",\n    lineHeight: \"26px\",\n    letterSpacing: \"0.1px\"\n}\n\nconst large = {\n    fontFamily: \"Inter\",\n    fontSize: \"18px\",\n    lineHeight: \"24px\",\n    letterSpacing: \"0.09px\",\n}\n\nconst medium = {\n    fontFamily: \"Inter\",\n    fontSize: \"16px\",\n    lineHeight: \"22px\",\n}\n\nconst small = {\n    fontFamily: \"Inter\",\n    fontSize: \"14px\",\n    lineHeight: \"20px\",\n}\n\nconst xSmall = {\n    fontFamily: \"Inter\",\n    fontSize: \"12px\",\n    lineHeight: \"16px\",\n}\n\nconst xxSmall = {\n    fontFamily: \"Inter\",\n    fontSize: \"10px\",\n    lineHeight: \"14px\",\n}\n\nexport const TypographyType = {\n    xxLarge: {\n        ...xxLarge,\n        fontWeight: 400\n    },\n    xxLargeBold: {\n        ...xxLarge,\n        fontWeight: 700\n    },\n    xLarge: {\n        ...xLarge,\n        fontWeight: 500\n    },\n    large: {\n        ...large,\n        fontWeight: 500\n    },\n    medium: {\n        ...medium,\n        fontWeight: 400\n    },\n    mediumMedium: {\n        ...medium,\n        fontWeight: 500\n    },\n    mediumSemiBold: {\n        ...medium,\n        fontWeight: 600\n    },\n    small: {\n        ...small,\n        fontWeight: 400\n    },\n    smallMedium: {\n        ...small,\n        fontWeight: 500\n    },\n    smallSemiBold: {\n        ...small,\n        fontWeight: 600\n    },\n    smallBold: {\n        ...small,\n        fontWeight: 700\n    },\n    xSmall: {\n        ...xSmall,\n        fontWeight: 400\n    },\n    xSmallMedium: {\n        ...xSmall,\n        fontWeight: 500,\n    },\n    xSmallSemiBold: {\n        ...xSmall,\n        fontWeight: 600,\n    },\n    xSmallBold: {\n        ...xSmall,\n        fontWeight: 700,\n    },\n    xxSmall: {\n        ...xxSmall,\n        fontWeight: 400\n    },\n    xxSmallMedium: {\n        ...xSmall,\n        fontWeight: 500,\n    },\n    xxSmallBold: {\n        ...xSmall,\n        fontWeight: 700,\n    },\n}","// React Lib\nimport React, { memo } from \"react\";\n\n// Material UI Core\nimport MUITypography from \"@material-ui/core/Typography\";\nimport { TypographyType } from \"../../Constants/Typography\";\nimport { Color } from \"../../Constants/Color\";\n\nconst Typography = (props) => {\n    const {\n        id,\n        fontFamily,\n        color,\n        style,\n        className,\n        onMouseOver,\n        onMouseOut,\n        onClick,\n        noWrap,\n        type\n    } = props;\n\n    return (\n        <MUITypography\n            id={id}\n            style={{\n                fontFamily: fontFamily,\n                color: color,\n                ...type,\n                ...style\n            }}\n            className={className}\n            onMouseOver={onMouseOver}\n            onMouseOut={onMouseOut}\n            onClick={onClick}\n            noWrap={noWrap ? noWrap : false}\n        >\n            {props.children}\n        </MUITypography>\n    )\n}\n\nTypography.defaultProps = {\n    fontFamily: \"Inter\",\n    color: Color.neutral[100],\n    type: TypographyType.medium\n}\n\nexport default memo(Typography)","import { makeStyles } from '@material-ui/core/styles'\nimport { Color } from './Constants/Color'\n\nexport const useAppStyles = makeStyles({\n    p2: { padding: 2 },\n    p4: { padding: 4 },\n    p8: { padding: 8 },\n    p12: { padding: 12 },\n    p16: { padding: 16 },\n    p20: { padding: 20 },\n    p24: { padding: 24 },\n    p28: { padding: 28 },\n    p32: { padding: 32 },\n    p36: { padding: 36 },\n    p40: { padding: 40 },\n    p44: { padding: 44 },\n    p48: { padding: 48 },\n\n    pt2: { paddingTop: 2 },\n    pt4: { paddingTop: 4 },\n    pt8: { paddingTop: 8 },\n    pt12: { paddingTop: 12 },\n    pt16: { paddingTop: 16 },\n    pt20: { paddingTop: 20 },\n    pt24: { paddingTop: 24 },\n    pt28: { paddingTop: 28 },\n    pt32: { paddingTop: 32 },\n    pt36: { paddingTop: 36 },\n    pt40: { paddingTop: 40 },\n    pt44: { paddingTop: 44 },\n    pt48: { paddingTop: 48 },\n\n    pr2: { paddingRight: 2 },\n    pr4: { paddingRight: 4 },\n    pr8: { paddingRight: 8 },\n    pr12: { paddingRight: 12 },\n    pr16: { paddingRight: 16 },\n    pr20: { paddingRight: 20 },\n    pr24: { paddingRight: 24 },\n    pr28: { paddingRight: 28 },\n    pr32: { paddingRight: 32 },\n    pr36: { paddingRight: 36 },\n    pr40: { paddingRight: 40 },\n    pr44: { paddingRight: 44 },\n    pr48: { paddingRight: 48 },\n\n    pl2: { paddingLeft: 2 },\n    pl4: { paddingLeft: 4 },\n    pl8: { paddingLeft: 8 },\n    pl12: { paddingLeft: 12 },\n    pl16: { paddingLeft: 16 },\n    pl20: { paddingLeft: 20 },\n    pl24: { paddingLeft: 24 },\n    pl28: { paddingLeft: 28 },\n    pl32: { paddingLeft: 32 },\n    pl36: { paddingLeft: 36 },\n    pl40: { paddingLeft: 40 },\n    pl44: { paddingLeft: 44 },\n    pl48: { paddingLeft: 48 },\n\n    pb2: { paddingBottom: 2 },\n    pb4: { paddingBottom: 4 },\n    pb8: { paddingBottom: 8 },\n    pb12: { paddingBottom: 12 },\n    pb16: { paddingBottom: 16 },\n    pb20: { paddingBottom: 20 },\n    pb24: { paddingBottom: 24 },\n    pb28: { paddingBottom: 28 },\n    pb32: { paddingBottom: 32 },\n    pb36: { paddingBottom: 36 },\n    pb40: { paddingBottom: 40 },\n    pb44: { paddingBottom: 44 },\n    pb48: { paddingBottom: 48 },\n\n    m2: { margin: 2 },\n    m4: { margin: 4 },\n    m8: { margin: 8 },\n    m12: { margin: 12 },\n    m16: { margin: 16 },\n    m20: { margin: 20 },\n    m24: { margin: 24 },\n    m28: { margin: 28 },\n    m32: { margin: 32 },\n    m36: { margin: 36 },\n    m40: { margin: 40 },\n    m44: { margin: 44 },\n    m48: { margin: 48 },\n\n    mt2: { marginTop: 2 },\n    mt4: { marginTop: 4 },\n    mt8: { marginTop: 8 },\n    mt12: { marginTop: 12 },\n    mt16: { marginTop: 16 },\n    mt20: { marginTop: 20 },\n    mt24: { marginTop: 24 },\n    mt28: { marginTop: 28 },\n    mt32: { marginTop: 32 },\n    mt36: { marginTop: 36 },\n    mt40: { marginTop: 40 },\n    mt44: { marginTop: 44 },\n    mt48: { marginTop: 48 },\n\n    mr2: { marginRight: 2 },\n    mr4: { marginRight: 4 },\n    mr8: { marginRight: 8 },\n    mr12: { marginRight: 12 },\n    mr16: { marginRight: 16 },\n    mr20: { marginRight: 20 },\n    mr24: { marginRight: 24 },\n    mr28: { marginRight: 28 },\n    mr32: { marginRight: 32 },\n    mr36: { marginRight: 36 },\n    mr40: { marginRight: 40 },\n    mr44: { marginRight: 44 },\n    mr48: { marginRight: 48 },\n\n    ml2: { marginLeft: 2 },\n    ml4: { marginLeft: 4 },\n    ml8: { marginLeft: 8 },\n    ml12: { marginLeft: 12 },\n    ml16: { marginLeft: 16 },\n    ml20: { marginLeft: 20 },\n    ml24: { marginLeft: 24 },\n    ml28: { marginLeft: 28 },\n    ml32: { marginLeft: 32 },\n    ml36: { marginLeft: 36 },\n    ml40: { marginLeft: 40 },\n    ml44: { marginLeft: 44 },\n    ml48: { marginLeft: 48 },\n\n    mb2: { marginBottom: 2 },\n    mb4: { marginBottom: 4 },\n    mb8: { marginBottom: 8 },\n    mb12: { marginBottom: 12 },\n    mb16: { marginBottom: 16 },\n    mb20: { marginBottom: 20 },\n    mb24: { marginBottom: 24 },\n    mb28: { marginBottom: 28 },\n    mb32: { marginBottom: 32 },\n    mb36: { marginBottom: 36 },\n    mb40: { marginBottom: 40 },\n    mb44: { marginBottom: 44 },\n    mb48: { marginBottom: 48 },\n\n    gap2: { gap: 2 },\n    gap4: { gap: 4 },\n    gap8: { gap: 8 },\n    gap12: { gap: 12 },\n    gap16: { gap: 16 },\n    gap20: { gap: 20 },\n    gap24: { gap: 24 },\n    gap28: { gap: 28 },\n    gap32: { gap: 32 },\n    gap36: { gap: 36 },\n    gap40: { gap: 40 },\n    gap44: { gap: 44 },\n    gap48: { gap: 48 },\n\n    flex: {\n        display: \"flex\"\n    },\n\n    flexStart: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n\n    flexCenter: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n\n    flexEnd: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n\n    flexSpaceBetween: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n\n    alignStart: {\n        alignItems: \"flex-start\"\n    },\n\n    alignCenter: {\n        alignItems: \"center\"\n    },\n\n    textRight: {\n        textAlign: \"right\"\n    },\n\n    textCenter: {\n        textAlign: \"center\"\n    },\n\n    flexColumn: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n\n    fullHeight: {\n        height: \"100%\"\n    },\n\n    fullWidth: {\n        width: \"100%\"\n    },\n\n    fullHeightvh: {\n        height: \"calc(100svh - 56px)\"\n    },\n\n    colorWhite: {\n        color: \"white !important\",\n    },\n\n    colorRed: {\n        color: \"red !important\",\n    },\n    containerWaste: {\n        width: \"150px\",\n        height: \"150px\",\n        background: Color.primary[10],\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        width: \"100%\"\n    }\n})","import { green } from '@material-ui/core/colors'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Color } from '../Constants/Color'\r\n\r\nexport const useStyles = makeStyles({\r\n    titleDashboardContainer: { background: Color.neutral[10] },\r\n})","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    cirlceCard: {\r\n        background: \"blue\",\r\n        padding: 16,\r\n        borderRadius: 50,\r\n        width: \"3rem\",\r\n        height: \"3rem\"\r\n    },\r\n    cardContainer: {\r\n        height: 200,\r\n        background: \"gray\",\r\n        borderRadius: 16\r\n    }\r\n}));","export const NAVBAR_TITLE = {\r\n    HOME: \"delcompost\",\r\n    DASHBOARD: \"Dashboard\",\r\n    LISTINBOUND: \"List of Inbound\",\r\n    ADDINBOUND: \"Add Inbound Delivery\",\r\n    DETAIL: \"Detail\",\r\n    PROCESS_WASTE: \"Process Waste\",\r\n    LIST_OF_WASTE: \"List of Waste\",\r\n    LISTOFCOMPOST: \"List of Compose Package\",\r\n    CREATECOMPOSE: \"Create Compose Package\",\r\n    DASHBOARD: \"Dashboard\"\r\n}","import axios from 'axios';\r\nimport { BASE_URL, INBOUND_API } from '../Constants/Api';\r\n\r\nexport const InboundApi = {\r\n    // getInboundDeliveryData(limit) {\r\n    //     return axios.get(`${BASE_URL + INBOUND_API}?limit=${limit}`);\r\n    // },\r\n\r\n    // getPokemonById(id) {\r\n    //     return axios.get(`${BASE_URL + INBOUND_API}${id}`);\r\n    // },\r\n\r\n    getInboundDeliveryData() {\r\n        return axios.get(`${BASE_URL + INBOUND_API}`);\r\n    },\r\n    createInboundDeliveryData(data) {\r\n        return axios.post(`${BASE_URL + INBOUND_API}`, data);\r\n    },\r\n}\r\n\r\nexport default InboundApi;","import React, { useContext, useEffect, useState } from 'react';\nimport DashboardApi from '../Apis/DashboardApi';\nimport { Each } from '../Components/Each/Each';\nimport { ResponsivePie } from '@nivo/pie';\nimport { ResponsiveFunnel } from '@nivo/funnel'\nimport { ResponsiveBar } from \"@nivo/bar\";\n\nimport Typography from '../Components/Typography/Typography';\nimport { TypographyType } from '../Constants/Typography';\n\nimport { useAppStyles } from '../AppStyles';\nimport { useStyles } from '../styles/MainPageStyles';\nimport Grid from '@material-ui/core/Grid';\nimport CardPile from '../Components/CardPile/CardPile';\n\n// import DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { NAVBAR_TITLE } from '../Constants/NavbarTitle';\nimport { AppContext } from '../App';\nimport InboundApi from '../Apis/InboundApi';\nimport { Color } from '../Constants/Color';\n\n\nconst MainPage = props => {\n    const appClasses = useAppStyles();\n    const classes = useStyles();\n    const { isNavbarBack, setIsNavbarBack, setNavbarTitle } = useContext(AppContext)\n    const [inboundDeliveryData, setInboundDeliveryData] = useState([])\n    const [wasteData, setWasteData] = useState([])\n    const [chartData, setChartData] = useState([])\n\n    useEffect(() => {\n        setNavbarTitle(NAVBAR_TITLE.DASHBOARD)\n        InboundApi.getInboundDeliveryData().then((res) => {\n            setInboundDeliveryData(res.data);\n        }).catch((err) => console.log(err));\n    }, [])\n\n    useEffect(() => {\n        setIsNavbarBack(true)\n        setNavbarTitle(NAVBAR_TITLE.DASHBOARD)\n        DashboardApi.getAllWaste().then((res) => {\n            setWasteData(res.data);\n        }).catch((err) => console.log(err));\n    }, [])\n\n    useEffect(() => {\n        // Initialize an object to hold aggregated weights for each day of the week\n        const aggregatedData = {\n            MON: { rejectedWeight: 0, organicWeight: 0, inorganicWeight: 0 },\n            TUE: { rejectedWeight: 0, organicWeight: 0, inorganicWeight: 0 },\n            WED: { rejectedWeight: 0, organicWeight: 0, inorganicWeight: 0 },\n            THU: { rejectedWeight: 0, organicWeight: 0, inorganicWeight: 0 },\n            FRI: { rejectedWeight: 0, organicWeight: 0, inorganicWeight: 0 },\n            SAT: { rejectedWeight: 0, organicWeight: 0, inorganicWeight: 0 },\n        };\n\n        // Iterate over the data and aggregate weights for each day of the week\n        inboundDeliveryData.forEach(item => {\n            const createdAt = new Date(item.created_at);\n            const dayOfWeek = createdAt.toLocaleDateString('en-US', { weekday: 'short' }).toUpperCase();\n\n            // Aggregate weights based on the day of the week\n            aggregatedData[dayOfWeek].rejectedWeight += parseInt(item.rejected_weight);\n            aggregatedData[dayOfWeek].organicWeight += parseInt(item.organic_weight);\n            aggregatedData[dayOfWeek].inorganicWeight += parseInt(item.inorganic_weight);\n        });\n\n        // Convert aggregated data into the desired format\n        const transformedData = Object.keys(aggregatedData).map(day => ({\n            day,\n            rejectedWeight: aggregatedData[day].rejectedWeight,\n            rejectedWeightColor: Color.primary[0],\n            organicWeight: aggregatedData[day].organicWeight,\n            organicWeightColor: Color.primary[20],\n            inorganicWeight: aggregatedData[day].inorganicWeight,\n            inorganicWeightColor: Color.primary[60],\n        }));\n\n        setChartData(transformedData)\n    }, [inboundDeliveryData])\n\n    return (\n        <div style={{ width: '100vw', height: '100vh' }}>\n\n            <Grid container\n                className={`${appClasses.flexCenter} ${appClasses.alignCenter} ${appClasses.gap16}`}\n                direction=\"column\" >\n\n                <div className={appClasses.containerWaste}>\n                    <div>\n                        Total Waste\n                    </div>\n                    <div>\n                        {wasteData.length}\n                    </div>\n                </div>\n            </Grid>\n\n            <div className={`${appClasses.p8} ${appClasses.flexCenter} ${classes.titleDashboardContainer}`}>\n                <Typography type={TypographyType.xLarge}>\n                    Type Of Waste Comparison\n                </Typography>\n            </div>\n\n            <ResponsiveBar\n                data={chartData}\n                keys={[\n                    'rejectedWeight',\n                    'organicWeight',\n                    'inorganicWeight',\n                ]}\n                indexBy=\"day\"\n                margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n                padding={0.3}\n                valueScale={{ type: 'linear' }}\n                indexScale={{ type: 'band', round: true }}\n                colors={{ scheme: 'nivo' }}\n                defs={[\n                    {\n                        id: 'dots',\n                        type: 'patternDots',\n                        background: 'inherit',\n                        color: Color.primary[0],\n                        size: 4,\n                        padding: 1,\n                        stagger: true\n                    },\n                    {\n                        id: 'lines',\n                        type: 'patternLines',\n                        background: 'inherit',\n                        color: Color.primary[20],\n                        rotation: -45,\n                        lineWidth: 6,\n                        spacing: 10\n                    }\n                ]}\n                fill={[\n                    // {\n                    //     match: {\n                    //         id: 'inorganicWeight'\n                    //     },\n                    //     id: 'lines'\n                    // }\n                ]}\n                borderColor={{\n                    from: 'color',\n                    modifiers: [\n                        [\n                            'darker',\n                            1.6\n                        ]\n                    ]\n                }}\n                axisTop={null}\n                axisRight={null}\n                axisBottom={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'day',\n                    legendPosition: 'middle',\n                    legendOffset: 32,\n                    truncateTickAt: 0\n                }}\n                axisLeft={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'waste Quantity',\n                    legendPosition: 'middle',\n                    legendOffset: -40,\n                    truncateTickAt: 0\n                }}\n                labelSkipWidth={12}\n                labelSkipHeight={12}\n                labelTextColor={{\n                    from: 'color',\n                    modifiers: [\n                        [\n                            'darker',\n                            1.6\n                        ]\n                    ]\n                }}\n                legends={[\n                    {\n                        dataFrom: 'keys',\n                        anchor: 'bottom-right',\n                        direction: 'column',\n                        justify: false,\n                        translateX: 120,\n                        translateY: 0,\n                        itemsSpacing: 2,\n                        itemWidth: 100,\n                        itemHeight: 20,\n                        itemDirection: 'left-to-right',\n                        itemOpacity: 0.85,\n                        symbolSize: 20,\n                        effects: [\n                            {\n                                on: 'hover',\n                                style: {\n                                    itemOpacity: 1\n                                }\n                            }\n                        ]\n                    }\n                ]}\n                role=\"application\"\n                ariaLabel=\"Waste Comparison\"\n            />\n\n        </div>\n    )\n}\n\nexport default MainPage;","export const ROUTE_PATH = {\n    MAIN: \"/\",\n    LIST: \"/list\",\n    DETAIL: \"/list/detail\",\n    DASHBOARD: \"/dashboard\",\n    ADDINBOUND: \"/add-inbound\",\n    PROCESS_WASTE: \"/process-waste\",\n    LIST_OF_WASTE: \"/list-of-waste\",\n    COMPOSEPACKGE: \"/compose-package\",\n    CREATECOMPOSEPACKAGE: \"/create-compose-package\"\n}","import React, { Children, memo } from \"react\";\n\nexport const Show = memo(props => {\n    let when = null;\n    let otherwise = null;\n\n    Children.forEach(props?.children, children => {\n        if (children?.props?.isTrue === undefined) {\n            otherwise = children;\n        } else if (!when && children?.props?.isTrue === true) {\n            when = children;\n        }\n    });\n\n    return when || otherwise;\n})\n\nShow.When = ({ isTrue, children }) => (isTrue && children) || <React.Fragment></React.Fragment >;\nShow.Else = ({ render, children }) => render || children || <React.Fragment></React.Fragment>;","import React, { useEffect, useState } from 'react';\nimport DashboardApi from '../Apis/DashboardApi';\nimport { Each } from '../Components/Each/Each';\nimport Typography from '../Components/Typography/Typography';\nimport { TypographyType } from '../Constants/Typography';\nimport { ROUTE_PATH } from '../Constants/RoutePath';\nimport { useParams } from 'react-router-dom';\nimport { Show } from '../Components/Show/Show';\nimport { useHistory } from 'react-router-dom';\n\nconst DetailPage = props => {\n    const [pokemon, setPokemon] = useState(null);\n    const param = useParams();\n    const history = useHistory()\n\n    const goBack = () => {\n        history.push({\n            pathname: ROUTE_PATH.LIST,\n        })\n    }\n\n    useEffect(() => {\n        DashboardApi.getPokemonById(param.id).then((res) => {\n            setPokemon(res.data);\n        }).catch((err) => console.log(err));\n    }, [])\n\n    return (\n        <div style={{ width: '100vw', height: '100vh' }}>\n            <Typography type={TypographyType.mediumSemiBold} onClick={goBack}>\n                Go back\n            </Typography>\n            <Show>\n                <Show.When isTrue={pokemon !== null}>\n                    <Typography type={TypographyType.xxLargeBold}>\n                        Name: {pokemon?.name}\n                    </Typography>\n\n                    <Typography type={TypographyType.xLarge}>\n                        Abilities:\n                    </Typography>\n                    <Each of={pokemon?.abilities} render={(ability) =>\n                        <Typography type={TypographyType.large}>\n                            {ability?.ability?.name}\n                        </Typography>\n                    } />\n                </Show.When>\n\n                <Show.Else>\n                    <Typography type={TypographyType.xxLargeBold}>\n                        LOADING...\n                    </Typography>\n                </Show.Else>\n            </Show>\n        </div>\n    )\n}\n\nexport default DetailPage;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst Form = props => {\n    const {\n        id,\n        value,\n        label,\n        placeholder,\n        onChange,\n        error,\n        fullWidth = true,\n        type,\n        disabled = false,\n    } = props\n\n    return (\n        <TextField\n            id={id}\n            value={value}\n            label={label}\n            placeholder={placeholder}\n            onChange={onChange}\n            error={error}\n            fullWidth={fullWidth}\n            variant=\"filled\"\n            type={type}\n            disabled={disabled}\n        />\n    )\n}\n\nexport default Form","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useAppStyles } from '.././AppStyles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { AppContext } from '../App';\r\nimport { NAVBAR_TITLE } from '../Constants/NavbarTitle';\r\nimport Form from '../Components/Form/Form';\r\nimport moment from 'moment'\r\nimport Typography from '../Components/Typography/Typography';\r\nimport { TypographyType } from '../Constants/Typography';\r\nimport InboundApi from '../Apis/InboundApi';\r\nimport { ROUTE_PATH } from '../Constants/RoutePath';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\nconst AddInboundPage = () => {\r\n    const history = useHistory()\r\n    const Appclasses = useAppStyles()\r\n    const { isNavbarBack, setIsNavbarBack, setNavbarTitle } = useContext(AppContext)\r\n\r\n    useEffect(() => {\r\n        setIsNavbarBack(true)\r\n        setNavbarTitle(NAVBAR_TITLE.ADDINBOUND)\r\n    }, [])\r\n\r\n    const [deliveryId, setDeliveryId] = useState(\"123\")\r\n    const [note, setNote] = useState(\"\")\r\n    const [licensePlate, setLicensePlate] = useState(\"\")\r\n    const [organicWeight, setOrganicWeight] = useState(0)\r\n    const [inOrganicWeight, setInOrganicWeight] = useState(0)\r\n    const [rejectedWeight, setRejectredWeight] = useState(0)\r\n    const [hardOrganicWeight, setHardOrganicWeight] = useState(0)\r\n    const [totalWeight, setTotalWeight] = useState(0)\r\n\r\n    const [errorExist, setErrorExist] = useState(false)\r\n\r\n    const handleSubmitWaste = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (rejectedWeight === 0) {\r\n            setErrorExist(true)\r\n            return;\r\n        }\r\n\r\n        if (organicWeight === 0) {\r\n            setErrorExist(true)\r\n            return;\r\n        }\r\n\r\n        if (inOrganicWeight === 0) {\r\n            setErrorExist(true)\r\n            return;\r\n        }\r\n\r\n        if (hardOrganicWeight === 0) {\r\n            setErrorExist(true)\r\n            return;\r\n        }\r\n\r\n        if (licensePlate === \"\") {\r\n            setErrorExist(true)\r\n            return;\r\n        }\r\n\r\n        if (note === \"\") {\r\n            setErrorExist(true)\r\n            return;\r\n        }\r\n\r\n        let objSend = {\r\n            rejected_weight: rejectedWeight,\r\n            organic_weight: organicWeight,\r\n            inorganic_weight: inOrganicWeight,\r\n            hardOrganic_weight: hardOrganicWeight,\r\n            license_plate: licensePlate,\r\n            note: note,\r\n        }\r\n\r\n        InboundApi.createInboundDeliveryData(objSend).then((res) => {\r\n            if (res.status === 200) {\r\n                history.push({\r\n                    pathname: `${ROUTE_PATH.LIST}`,\r\n                })\r\n            }\r\n        }).catch((err) => console.log(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n        let totalWeight = 0;\r\n        totalWeight = parseInt(rejectedWeight) + parseInt(hardOrganicWeight) + parseInt(organicWeight) + parseInt(inOrganicWeight)\r\n        let intTotalWeight = parseInt(totalWeight)\r\n        if (intTotalWeight <= 0) {\r\n            totalWeight = 0\r\n        }\r\n        setTotalWeight(totalWeight)\r\n    }, [rejectedWeight, hardOrganicWeight, organicWeight, inOrganicWeight])\r\n\r\n    return (\r\n        <form className={Appclasses.p20} onSubmit={handleSubmitWaste}>\r\n            <Grid\r\n                container\r\n                className={`${Appclasses.flexCenter} ${Appclasses.alignCenter} ${Appclasses.gap16}`}\r\n                direction=\"column\"\r\n            >\r\n                {/* <Grid className={Appclasses.fullWidth} item>\r\n                    <Form\r\n                        id=\"deliveryId\"\r\n                        label=\"Delivery ID\"\r\n                        value={deliveryId}\r\n                        disabled={true}\r\n                    />\r\n                </Grid> */}\r\n                {/* <Grid className={Appclasses.fullWidth} item>\r\n                    <Form\r\n                        id=\"date\"\r\n                        // label=\"Date\"\r\n                        value={date}\r\n                        onChange={e => setDate(e.target.value)}\r\n                        type={\"date\"}\r\n                    />\r\n                </Grid> */}\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"licensePlate\"\r\n                            label=\"License Plate\"\r\n                            value={licensePlate}\r\n                            onChange={e => setLicensePlate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"organicWeight\"\r\n                            label=\"Organic Weight\"\r\n                            value={organicWeight}\r\n                            onChange={e => setOrganicWeight(e.target.value === \"0\" || e.target.value === \"\" ? \"0\" : parseInt(e.target.value))}\r\n                        />\r\n                        <div>\r\n                            KG\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"inOrganicWeight\"\r\n                            label=\"Inorganic Weight\"\r\n                            value={inOrganicWeight}\r\n                            onChange={e => setInOrganicWeight(e.target.value === \"0\" || e.target.value === \"\" ? \"0\" : parseInt(e.target.value))}\r\n                        />\r\n                        <div>\r\n                            KG\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"hardOrganicWeight\"\r\n                            label=\"Hard Organic Weight\"\r\n                            value={hardOrganicWeight}\r\n                            onChange={e => setHardOrganicWeight(e.target.value === \"0\" || e.target.value === \"\" ? \"0\" : parseInt(e.target.value))}\r\n                        />\r\n                        <div>\r\n                            KG\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"rejectedWeight\"\r\n                            label=\"Rejected Weight\"\r\n                            value={rejectedWeight}\r\n                            onChange={e => setRejectredWeight(e.target.value === \"0\" || e.target.value === \"\" ? \"0\" : parseInt(e.target.value))}\r\n                        />\r\n                        <div>\r\n                            KG\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"note\"\r\n                            label=\"Note\"\r\n                            value={note}\r\n                            onChange={e => setNote(e.target.value)}\r\n                        />\r\n                        <div>\r\n                            KG\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n\r\n                {\r\n                    errorExist && (\r\n                        <div className={Appclasses.colorRed}>\r\n                            Please Fill All Form\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <Grid className={`${Appclasses.fullWidth} ${Appclasses.flexEnd}`} item>\r\n                    Total Weight {totalWeight} KG\r\n                </Grid>\r\n\r\n                <Grid className={`${Appclasses.fullWidth} ${Appclasses.gap8}`} item >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <Button className={`${Appclasses.fullWidth}`} variant=\"contained\" type=\"submit\">\r\n\r\n                                <Typography type={TypographyType.xSmall}>\r\n                                    Submit\r\n                                </Typography>\r\n                            </Button>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Button className={`${Appclasses.fullWidth}`} variant=\"contained\" color=\"primary\">\r\n                                <Typography className={Appclasses.colorWhite} type={TypographyType.xSmall}>\r\n                                    Process Waste\r\n                                </Typography>\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddInboundPage;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport moment from 'moment'\r\n\r\nconst PlaceHolder = (props) => {\r\n    const { text, Appclasses, handleClick } = props\r\n    return (\r\n        <Grid\r\n            container\r\n            className={`${Appclasses.flexCenter} ${Appclasses.alignCenter} ${Appclasses.gap16} ${Appclasses.fullHeightvh}`}\r\n            direction=\"column\"\r\n        >\r\n            <div>\r\n                asd\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleClick}\r\n                >{text}\r\n                </Button>\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default PlaceHolder;","import React, { useContext, useEffect, useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Switch, Route } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Button, Grid } from '@material-ui/core';\nimport moment from 'moment'\n\nimport { Each } from '../Components/Each/Each';\nimport Typography from '../Components/Typography/Typography';\nimport { TypographyType } from '../Constants/Typography';\nimport { ROUTE_PATH } from '../Constants/RoutePath';\nimport DetailPage from './DetailPage';\nimport Form from '../Components/Form/Form';\nimport { useAppStyles } from '.././AppStyles';\nimport { AppContext } from '../App';\nimport AddInboundPage from './AddInboundPage';\nimport DashboardApi from '../Apis/DashboardApi';\nimport { NAVBAR_TITLE } from '../Constants/NavbarTitle';\nimport PlaceHolder from '../Components/PlaceHolder/PlaceHolder';\nimport InboundApi from '../Apis/InboundApi';\nimport { Show } from '../Components/Show/Show';\n\nconst ListInboundTable = props => {\n    const { Appclasses, handleAddInbound, inboundDeliveryData, setInboundDeliveryData, setIsLoading } = props\n\n    const [date, setDate] = useState(moment().format(\"YYYY-MM-DD\"))\n\n    const [tableData, setTableData] = useState([])\n\n    useEffect(() => {\n        if (inboundDeliveryData.length > 0) {\n            setTableData(inboundDeliveryData)\n        }\n    }, [inboundDeliveryData])\n\n    const handleChangeDate = (selectedDate) => {\n        setDate(selectedDate)\n        setIsLoading(true)\n\n        let tempCloneData = [...inboundDeliveryData]\n\n        const filteredData = tempCloneData.filter(item => {\n            const createdAtDate = moment(item.created_at).format(\"YYYY-MM-DD\");\n            return createdAtDate === selectedDate;\n        });\n        setTableData(filteredData)\n        setIsLoading(false)\n    }\n\n    return (\n        <div className={Appclasses.p20}>\n\n            <Grid className={`${Appclasses.mb8}`} container spacing={3}>\n                <Grid item xs={6} />\n                <Grid className={`${Appclasses.flexEnd}`} item xs={6}>\n                    <Form\n                        id=\"date\"\n                        value={date}\n                        onChange={e => handleChangeDate(e.target.value)}\n                        type=\"date\"\n                    />\n                </Grid>\n            </Grid>\n            {tableData.length > 0 ? (\n                <>\n                    <TableContainer component={Paper}>\n                        <Table aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography type={TypographyType.xxSmallBold}>\n                                            Delivery Id\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography type={TypographyType.xxSmallBold}>\n                                            License Plate\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography type={TypographyType.xxSmallBold}>\n                                            Organic Weight\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography type={TypographyType.xxSmallBold}>\n                                            Total Weight\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {tableData.map((row) => {\n                                    let intRejectedWeight = isNaN(parseInt(row.rejected_weight)) ? 0 : parseInt(row.rejected_weight)\n                                    let intOrganicWeight = isNaN(parseInt(row.organic_weight)) ? 0 : parseInt(row.organic_weight)\n                                    let intInOrganicWeight = isNaN(parseInt(row.inorganic_weight)) ? 0 : parseInt(row.inorganic_weight)\n                                    let intHardOrganicWeight = isNaN(parseInt(row.hard_organic_weight)) ? 0 : parseInt(row.hard_organic_weight)\n\n                                    const totalWeight = intRejectedWeight + intOrganicWeight + intInOrganicWeight + intHardOrganicWeight\n                                    return (\n                                        <TableRow key={row.id}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {row.id}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.license_plate}</TableCell>\n                                            <TableCell align=\"right\">{row.organic_weight}</TableCell>\n                                            <TableCell align=\"right\">{totalWeight}</TableCell>\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <Grid container className={Appclasses.mt16}>\n                        <Button\n                            startIcon={<AddIcon />}\n                            onClick={handleAddInbound}\n                            className={`${Appclasses.fullWidth}`} variant=\"contained\" color=\"primary\" type=\"submit\">\n                            Add Inbound Delivery\n                        </Button>\n                    </Grid>\n                </>\n            ) : (\n                <Grid\n                    container\n                    className={`${Appclasses.mt16} ${Appclasses.flexCenter} ${Appclasses.alignCenter} ${Appclasses.gap16}`}\n                    direction=\"column\"\n                >\n                    <Typography type={TypographyType.xLarge}>\n                        No List of Inbound Found\n                    </Typography>\n                </Grid>\n            )}\n\n\n        </div >\n    )\n}\n\nconst ListPage = props => {\n    const { isNavbarBack, setIsNavbarBack, setNavbarTitle } = useContext(AppContext)\n    const [inboundDeliveryData, setInboundDeliveryData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false)\n\n    const history = useHistory()\n    const handleAddInbound = () => {\n        history.push({\n            pathname: `${ROUTE_PATH.ADDINBOUND}`,\n        })\n    }\n    useEffect(() => {\n        setIsNavbarBack(true)\n        setNavbarTitle(NAVBAR_TITLE.LISTINBOUND)\n    }, [])\n\n    const Appclasses = useAppStyles()\n\n    useEffect(() => {\n        InboundApi.getInboundDeliveryData().then((res) => {\n            setInboundDeliveryData(res.data);\n            setIsLoading(false)\n        }).catch((err) => console.log(err));\n    }, [])\n\n    return (\n        <Switch>\n            <Route path={ROUTE_PATH.LIST} exact>\n                <Show>\n                    <Show.When isTrue={inboundDeliveryData.length > 0}>\n                        {inboundDeliveryData.length <= 0 && !isLoading ? (\n                            <PlaceHolder text={\"add Inbound Delivery\"} Appclasses={Appclasses} handleClick={handleAddInbound} />\n                        ) : (\n                            <ListInboundTable setIsLoading={setIsLoading} inboundDeliveryData={inboundDeliveryData} setInboundDeliveryData={setInboundDeliveryData} Appclasses={Appclasses} handleAddInbound={handleAddInbound} />\n                        )}\n                    </Show.When>\n\n                    <Show.Else>\n                        <Grid\n                            container\n                            className={`${Appclasses.flexCenter} ${Appclasses.alignCenter} ${Appclasses.gap16}`}\n                            direction=\"column\"\n                        >\n                            <Typography type={TypographyType.xxLargeBold}>\n                                {isLoading ? (\n                                    <div>\n\n                                        LOADING...\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <Typography type={TypographyType.xLarge}>\n                                            No List of Inbound Found\n                                        </Typography>\n                                    </div>\n                                )}\n                            </Typography>\n                            <Button\n                                color=\"primary\"\n                                startIcon={<AddIcon />}\n                                onClick={handleAddInbound}\n                            >add Inbound Data\n                            </Button>\n                        </Grid>\n                    </Show.Else>\n                </Show>\n            </Route>\n\n            <Route path={ROUTE_PATH.DETAIL + \"/:id\"}>\n                <DetailPage />\n            </Route>\n        </Switch>\n    )\n}\n\nexport default ListPage;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { Color } from \"../../Constants/Color\";\n\nexport const useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        height: 156,\n        width: \"calc((100vw - 48px) / 2)\",\n        backgroundColor: Color.primary[60],\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        alignItems: \"center\",\n        gap: 16,\n        \"&:active\": {\n            backgroundColor: Color.primary[40]\n        }\n    }\n}))","import React from \"react\";\n\nimport { useAppStyles } from \"../../AppStyles\";\nimport { useStyles } from \"./MenuCardStyles\";\n\nimport { Paper, SvgIcon } from \"@material-ui/core\";\nimport Typography from \"../Typography/Typography\";\nimport { Color } from \"../../Constants/Color\";\nimport { TypographyType } from \"../../Constants/Typography\";\n\nconst MenuCard = props => {\n    const {\n        data\n    } = props\n\n    const appClasses = useAppStyles()\n    const classes = useStyles()\n\n    return (\n        <Paper\n            className={`${classes.root}`}\n            style={{ backgroundColor: data.color }}\n            onClick={data.handleClick}\n        >\n            <SvgIcon className={appClasses.pt44} htmlColor={Color.neutral[0]}>\n                {data.icon}\n            </SvgIcon>\n            <Typography color={Color.neutral[0]} type={TypographyType.smallMedium}>\n                {data.label}\n            </Typography>\n        </Paper>\n    )\n}\n\nexport default MenuCard","import React from \"react\";\n\nimport { SvgIcon } from \"@material-ui/core\";\n\nconst ListOfCompostIcon = React.forwardRef((props, ref) => {\n    return (\n        <SvgIcon ref={ref} {...props}>\n            <path d=\"M20 2H4c-1 0-2 .9-2 2v3.01c0 .72.43 1.34 1 1.69V20c0 1.1 1.1 2 2 2h14c.9 0 2-.9 2-2V8.7c.57-.35 1-.97 1-1.69V4c0-1.1-1-2-2-2zm-5 12H9v-2h6v2zm5-7H4V4l16-.02V7z\" />\n        </SvgIcon>\n    )\n})\n\nexport default ListOfCompostIcon","import React from \"react\";\n\nimport { SvgIcon } from \"@material-ui/core\";\n\nconst ListOfWaste = React.forwardRef((props, ref) => {\n    return (\n        <SvgIcon ref={ref} {...props}>\n            <path d=\"M22,10v12H2V10l7-3v2l5-2l0,0l0,3H22z M17.2,8.5L18,2h3l0.8,6.5H17.2z M11,18h2v-4h-2V18z M7,18h2v-4H7V18z M17,14h-2v4h2 V14z\" />\n        </SvgIcon>\n    )\n})\n\nexport default ListOfWaste","import React from \"react\";\n\nimport { SvgIcon } from \"@material-ui/core\";\n\nconst ListOfInboundIcon = React.forwardRef((props, ref) => {\n    return (\n        <SvgIcon ref={ref} {...props}>\n            <path d=\"M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zM6 18.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9l1.96 2.5H17V9.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\" />\n        </SvgIcon>\n    )\n})\n\nexport default ListOfInboundIcon","import React from \"react\";\n\nimport { SvgIcon } from \"@material-ui/core\";\n\nconst ListOfSalesInvoiceIcon = React.forwardRef((props, ref) => {\n    return (\n        <SvgIcon ref={ref} {...props}>\n            <path d=\"M19.5,3.5L18,2l-1.5,1.5L15,2l-1.5,1.5L12,2l-1.5,1.5L9,2L7.5,3.5L6,2v14H3v3c0,1.66,1.34,3,3,3h12c1.66,0,3-1.34,3-3V2 L19.5,3.5z M19,19c0,0.55-0.45,1-1,1s-1-0.45-1-1v-3H8V5h11V19z\" />\n        </SvgIcon>\n    )\n})\n\nexport default ListOfSalesInvoiceIcon","import React, { useContext, useEffect } from \"react\";\n\nimport { useAppStyles } from \"../AppStyles\";\nimport { Each } from \"../Components/Each/Each\";\nimport { TypographyType } from \"../Constants/Typography\";\n\nimport Typography from \"../Components/Typography/Typography\";\nimport { Grid } from \"@material-ui/core\";\nimport MenuCard from \"../Components/MenuCard/MenuCard\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { ROUTE_PATH } from \"../Constants/RoutePath\";\nimport { NAVBAR_TITLE } from \"../Constants/NavbarTitle\";\nimport { AppContext } from \"../App\";\nimport ListOfCompostIcon from \"../Icons/ListOfCompostIcon\";\nimport ListOfWaste from \"../Icons/ListOfWaste\";\nimport ListOfInboundIcon from \"../Icons/ListOfInboundIcon\";\nimport ListOfSalesInvoiceIcon from \"../Icons/ListOfSalesInvoice\";\nimport { Color } from \"../Constants/Color\";\n\nconst MenuPage = props => {\n    const appClasses = useAppStyles()\n    let history = useHistory();\n    const { setIsNavbarBack, setNavbarTitle } = useContext(AppContext)\n\n    const menuList = [\n        {\n            icon: <DashboardIcon />,\n            label: \"Dashboard\",\n            handleClick: () => {\n                history.push({\n                    pathname: `${ROUTE_PATH.DASHBOARD}`,\n                })\n            }\n        },\n        {\n            icon: <ListOfInboundIcon />,\n            label: \"List of Inbound\",\n            handleClick: () => {\n                history.push({\n                    pathname: `${ROUTE_PATH.LIST}`,\n                })\n            }\n        },\n        {\n            icon: <ListOfWaste />,\n            label: \"List of Waste\",\n            handleClick: () => {\n                history.push({\n                    pathname: `${ROUTE_PATH.LIST_OF_WASTE}`,\n                })\n            }\n        },\n        {\n            icon: <ListOfCompostIcon />,\n            label: \"List of Compost Package\",\n            color: Color.neutral[40],\n            handleClick: () => console.log(\"list of compost package\")\n        },\n        {\n            icon: <ListOfSalesInvoiceIcon />,\n            color: Color.neutral[40],\n            label: \"List of Sales Invoice\",\n            handleClick: () => console.log(\"list of sales invoice\")\n        },\n    ]\n\n    useEffect(() => {\n        setIsNavbarBack(false)\n        setNavbarTitle(NAVBAR_TITLE.HOME)\n    }, [])\n\n    return (\n        <Grid\n            container\n            className={`${appClasses.flexCenter} ${appClasses.gap24} ${appClasses.pt40} ${appClasses.pb24} ${appClasses.pl20} ${appClasses.pr20}`}\n            style={{ width: '100%' }}\n        >\n            <Grid item>\n                <Typography type={TypographyType.mediumSemiBold} style={{ fontSize: 20 }}>\n                    Welcome\n                </Typography>\n            </Grid>\n\n            <Grid\n                container\n                className={`${appClasses.flexCenter} ${appClasses.gap8}`}\n            >\n                <Each of={menuList} render={(menu) =>\n                    <Grid\n                        item\n                        className={`${appClasses.flexCenter}`}\n                    >\n                        <MenuCard data={menu} />\n                    </Grid>\n                } />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default MenuPage","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { useAppStyles } from \"../AppStyles\";\nimport { AppContext } from \"../App\";\nimport { NAVBAR_TITLE } from \"../Constants/NavbarTitle\";\nimport moment from \"moment\";\n\nimport { Button, Grid } from \"@material-ui/core\";\nimport Form from \"../Components/Form/Form\";\nimport Typography from \"../Components/Typography/Typography\";\nimport { Show } from \"../Components/Show/Show\";\n\nconst ProcessWaste = props => {\n    const [wasteId, setWasteId] = useState(\"\")\n    const [date, setDate] = useState(moment().format(\"YYYY-MM-DD\"))\n    const [status, setStatus] = useState(\"\")\n    const [weight, setWeight] = useState(\"\")\n    const [volume, setVolume] = useState(\"\")\n    const [temperature, setTemperature] = useState(\"\")\n    const [humidity, setHumidity] = useState(\"\")\n    const [waterAdded, setWaterAdded] = useState(\"\")\n\n    const appClasses = useAppStyles()\n\n    const {\n        setNavbarTitle\n    } = useContext(AppContext)\n\n    const handleProcessWaste = (event) => {\n        event.preventDefault()\n        console.log(wasteId, date, status, weight, volume, temperature)\n    }\n\n    useEffect(() => {\n        setNavbarTitle(NAVBAR_TITLE.PROCESS_WASTE)\n    }, [])\n\n    return (\n        <form className={appClasses.p20} onSubmit={handleProcessWaste}>\n            <Grid\n                container\n                className={`${appClasses.flexCenter} ${appClasses.alignCenter} ${appClasses.gap16}`}\n                direction=\"column\"\n            >\n                <Show>\n                    <Show.When isTrue={wasteId}>\n                        <Grid className={appClasses.fullWidth} item>\n                            <Form\n                                id=\"wasteId\"\n                                label=\"Waste ID\"\n                                value={wasteId}\n                                type=\"number\"\n                                onChange={e => setWasteId(e.target.value)}\n                                disabled={true}\n                            />\n                        </Grid>\n                    </Show.When>\n                </Show>\n                <Grid className={appClasses.fullWidth} item>\n                    <Form\n                        id=\"date\"\n                        label=\"Date\"\n                        value={date}\n                        type=\"date\"\n                        onChange={e => setDate(e.target.value)}\n                    />\n                </Grid>\n                <Grid className={appClasses.fullWidth} item>\n                    <Form\n                        id=\"status\"\n                        label=\"Status\"\n                        value={status}\n                        onChange={e => setStatus(e.target.value)}\n                    />\n                </Grid>\n                <Grid className={appClasses.fullWidth} item>\n                    <div className={`${appClasses.alignCenter} ${appClasses.flex} ${appClasses.gap8}`}>\n                        <Form\n                            id=\"weight\"\n                            label=\"Weight\"\n                            value={weight}\n                            type=\"number\"\n                            onChange={e => setWeight(e.target.value)}\n                        />\n                        <Typography>\n                            KG\n                        </Typography>\n                    </div>\n                </Grid>\n                <Grid className={appClasses.fullWidth} item>\n                    <div className={`${appClasses.alignCenter} ${appClasses.flex} ${appClasses.gap8}`}>\n                        <Form\n                            id=\"volume\"\n                            label=\"Volume\"\n                            value={volume}\n                            type=\"number\"\n                            onChange={e => setVolume(e.target.value)}\n                        />\n                        <Typography>\n                            M³\n                        </Typography>\n                    </div>\n                </Grid>\n                <Grid className={appClasses.fullWidth} item>\n                    <div className={`${appClasses.alignCenter} ${appClasses.flex} ${appClasses.gap8}`}>\n                        <Form\n                            id=\"temperature\"\n                            label=\"Temperature\"\n                            value={temperature}\n                            type=\"number\"\n                            onChange={e => setTemperature(e.target.value)}\n                        />\n                        <Typography>\n                            °C\n                        </Typography>\n                    </div>\n                </Grid>\n                <Grid className={appClasses.fullWidth} item>\n                    <div className={`${appClasses.alignCenter} ${appClasses.flex} ${appClasses.gap8}`}>\n                        <Form\n                            id=\"humidity\"\n                            label=\"Humidity\"\n                            value={humidity}\n                            type=\"number\"\n                            onChange={e => setHumidity(e.target.value)}\n                        />\n                    </div>\n                </Grid>\n                <Grid className={appClasses.fullWidth} item>\n                    <div className={`${appClasses.alignCenter} ${appClasses.flex} ${appClasses.gap8}`}>\n                        <Form\n                            id=\"waterAdded\"\n                            label=\"Water Added\"\n                            value={waterAdded}\n                            onChange={e => setWaterAdded(e.target.value)}\n                        />\n                    </div>\n                </Grid>\n\n                <Grid item>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        PROCESS WASTE\n                    </Button>\n                </Grid>\n\n            </Grid>\n        </form>\n    )\n}\n\nexport default ProcessWaste","import axios from \"axios\";\nimport { BASE_URL, WASTE_API } from \"../Constants/Api\";\n\nconst WasteApi = {\n    getAllWaste() {\n        return axios.get(`${BASE_URL + WASTE_API}`)\n    },\n\n    geWasteById(id) {\n        return axios.get(`${BASE_URL + WASTE_API}${id}`)\n    }\n}\n\nexport default WasteApi;","import React, { useContext, useEffect, useState } from \"react\";\nimport Typography from \"../Components/Typography/Typography\";\nimport { Each } from \"../Components/Each/Each\";\nimport { Box, Grid, IconButton, Menu, MenuItem, Paper, TextField } from \"@material-ui/core\";\nimport Form from \"../Components/Form/Form\";\nimport moment from \"moment\";\nimport { useAppStyles } from \"../AppStyles\";\nimport { Color } from \"../Constants/Color\";\nimport { TypographyType } from \"../Constants/Typography\";\nimport { MoreVert } from \"@material-ui/icons\";\nimport { AppContext } from \"../App\";\nimport { NAVBAR_TITLE } from \"../Constants/NavbarTitle\";\nimport WasteApi from \"../Apis/WasteApi\";\nimport { Show } from \"../Components/Show/Show\";\n\nconst StatusChip = props => {\n    const {\n        value\n    } = props\n\n    const appClasses = useAppStyles()\n\n    return (\n        <div\n            className={`${appClasses.p8}`}\n            style={{ borderRadius: 16, backgroundColor: Color.neutral[40] }}\n        >\n            <Typography type={TypographyType.xxSmall} color={Color.neutral[0]}>\n                {value}\n            </Typography>\n        </div>\n    )\n}\n\nconst ListOfWastePage = props => {\n\n    const [wasteList, setWasteList] = useState([])\n    const [date, setDate] = useState(moment().format(\"YYYY-MM-DD\"))\n    const [anchorEl, setAnchorEl] = useState(null)\n    const open = Boolean(anchorEl)\n\n    const {\n        setNavbarTitle,\n        setIsNavbarBack\n    } = useContext(AppContext)\n\n    const appClasses = useAppStyles()\n\n    const showMoreOptions = [\n        \"Waste Detail\",\n        \"Update Condition\"\n    ]\n\n    const handleClickMoreOption = (event) => {\n        console.log(event)\n        setAnchorEl(event.currentTarget)\n    }\n\n    const handleCloseMoreOption = () => {\n        setAnchorEl(null)\n    }\n\n    useEffect(() => {\n        setIsNavbarBack(true)\n        setNavbarTitle(NAVBAR_TITLE.LIST_OF_WASTE)\n    }, [])\n\n    useEffect(() => {\n        WasteApi.getAllWaste().then((res) => {\n            if (res?.data) {\n                const wasteData = res.data\n                const newWasteData = []\n\n                wasteData.forEach((waste) => {\n                    newWasteData.push({\n                        wasteId: waste.simple_id,\n                        status: waste.curr_waste_status\n                    })\n                })\n\n                setWasteList(newWasteData)\n            }\n        })\n    }, [])\n\n    return (\n        <Grid\n            container\n            className={`${appClasses.flexEnd} ${appClasses.p20} ${appClasses.gap16}`}\n            direction=\"column\"\n        >\n            <Grid item className={`${appClasses.flexEnd}`} style={{ display: \"flex\", width: \"100%\", justifyContent: \"flex-end\" }}>\n                <Box style={{ width: \"50%\" }}>\n                    <Form\n                        id=\"date\"\n                        label=\"DATE\"\n                        value={date}\n                        type=\"date\"\n                        onChange={e => setDate(e.target.value)}\n                    />\n                </Box>\n            </Grid>\n\n            <Grid container item className={appClasses.gap16}>\n                <Show>\n                    <Show.When isTrue={wasteList.length > 0}>\n                        <Each of={wasteList} render={(waste) =>\n                            <Grid item style={{ width: \"100%\" }}>\n                                <Paper className={`${appClasses.flexSpaceBetween} ${appClasses.p16} ${appClasses.alignCenter}`}>\n                                    <Typography>\n                                        {waste.wasteId}\n                                    </Typography>\n\n                                    <Box className={`${appClasses.flex} ${appClasses.gap8} ${appClasses.alignCenter}`}>\n                                        <StatusChip value={waste.status} />\n                                        <IconButton\n                                            aria-label=\"more\"\n                                            id=\"show-more-button\"\n                                            aria-controls={open ? \"show-more-menu\" : undefined}\n                                            aria-expanded={open ? \"true\" : undefined}\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClickMoreOption}\n                                        >\n                                            <MoreVert />\n                                        </IconButton>\n\n                                        {/* Show more menu */}\n                                        <Menu\n                                            id=\"show-more-menu\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={open}\n                                            onClose={handleCloseMoreOption}\n                                            PaperProps={{\n                                                style: {\n                                                    maxHeight: 200,\n                                                    width: \"100%\"\n                                                }\n                                            }}\n                                        >\n                                            <Each of={showMoreOptions} render={(option) =>\n                                                <MenuItem onClick={handleCloseMoreOption}>\n                                                    {option}\n                                                </MenuItem>\n                                            } />\n                                        </Menu>\n                                    </Box>\n                                </Paper>\n                            </Grid>\n                        } />\n                    </Show.When>\n\n                    <Show.Else>\n                        <Typography type={TypographyType.xxLargeBold}>\n                            LOADING...\n                        </Typography>\n                    </Show.Else>\n                </Show>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default ListOfWastePage","import React, { useContext, useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport moment from 'moment'\r\nimport { NAVBAR_TITLE } from \"../Constants/NavbarTitle\";\r\nimport { ROUTE_PATH } from \"../Constants/RoutePath\";\r\nimport PlaceHolder from \"../Components/PlaceHolder/PlaceHolder\";\r\nimport { AppContext } from '../App';\r\nimport { useAppStyles } from '../AppStyles';\r\n\r\nconst ComposeTable = props => {\r\n    const { Appclasses, handleAddComposePackage } = props\r\n\r\n    const [date, setDate] = useState(moment().format(\"DD/MM/YY\"))\r\n\r\n    function createData(name, calories, fat, carbs, protein) {\r\n        return { name, calories, fat, carbs, protein };\r\n    }\r\n\r\n    const rows = [\r\n        createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n        createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n        createData('Eclair', 262, 16.0, 24, 6.0),\r\n        createData('Cupcake', 305, 3.7, 67, 4.3),\r\n        createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n    ];\r\n\r\n    console.log(\"date\", date)\r\n    return (\r\n        <div className={Appclasses.p20}>\r\n            <Grid className={`${Appclasses.mb8}`} container spacing={3}>\r\n                <Grid item xs={6} />\r\n                <Grid className={`${Appclasses.flexEnd}`} item xs={6}>\r\n                    <Form\r\n                        id=\"date\"\r\n                        value={date}\r\n                        onChange={e => setDate(e.target.value)}\r\n                        type=\"date\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Delivery Id</TableCell>\r\n                            <TableCell>License Plate</TableCell>\r\n                            <TableCell align=\"right\">Organic Weight</TableCell>\r\n                            <TableCell align=\"right\">Total Weight</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Grid container className={Appclasses.mt16}>\r\n                <Button\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddInbound}\r\n                    className={`${Appclasses.fullWidth}`} variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    Create Compost Package\r\n                </Button>\r\n            </Grid>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst ComposePackage = (props) => {\r\n    const { isNavbarBack, setIsNavbarBack, setNavbarTitle } = useContext(AppContext)\r\n    const history = useHistory()\r\n    const handleAddComposePackage = () => {\r\n        history.push({\r\n            pathname: `${ROUTE_PATH.CREATECOMPOSEPACKAGE}`,\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        setNavbarTitle(NAVBAR_TITLE.LISTOFCOMPOST)\r\n    }, [])\r\n\r\n    const [listOfPackageData, setListOfPackageData] = useState([]);\r\n    const Appclasses = useAppStyles()\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={ROUTE_PATH.COMPOSEPACKGE} exact>\r\n                {listOfPackageData.length <= 0 ? (\r\n                    <PlaceHolder text={\"Create Compost Package\"} Appclasses={Appclasses} handleClick={handleAddComposePackage} />\r\n                ) : (\r\n                    <ComposeTable Appclasses={Appclasses} handleAddComposePackage={handleAddComposePackage} />\r\n                )}\r\n                {/* <ComposeTable Appclasses={Appclasses} handleAddComposePackage={handleAddComposePackage} /> */}\r\n            </Route>\r\n\r\n            {/* <Route path={ROUTE_PATH.DETAIL + \"/:id\"}>\r\n                <DetailPage />\r\n            </Route> */}\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default ComposePackage;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useAppStyles } from '.././AppStyles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { AppContext } from '../App';\r\nimport { NAVBAR_TITLE } from '../Constants/NavbarTitle';\r\nimport Form from '../Components/Form/Form';\r\nimport moment from 'moment'\r\n\r\n\r\nconst CreateComposePackage = () => {\r\n    const Appclasses = useAppStyles()\r\n    const { isNavbarBack, setIsNavbarBack, setNavbarTitle } = useContext(AppContext)\r\n\r\n    useEffect(() => {\r\n        setNavbarTitle(NAVBAR_TITLE.CREATECOMPOSE)\r\n    }, [])\r\n\r\n    const [deliveryId, setDeliveryId] = useState(\"123\")\r\n    const [date, setDate] = useState(moment().format(\"DD/MM/YY\"))\r\n    const [note, setNote] = useState(\"\")\r\n    const [licensePlate, setLicensePlate] = useState(\"\")\r\n    const [organicWeight, setOrganicWeight] = useState(0)\r\n    const [inOrganicWeight, setInOrganicWeight] = useState(0)\r\n    const [rejectedWeight, setRejectredWeight] = useState(0)\r\n    const [hardOrganicWeight, setHardOrganicWeight] = useState(0)\r\n    const [totalWeight, setTotalWeight] = useState(0)\r\n\r\n    const handleSubmitWaste = (event) => {\r\n        event.preventDefault()\r\n        console.log(date, note, rejectedWeight, hardOrganicWeight, inOrganicWeight, organicWeight, licensePlate)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let totalWeight = 0;\r\n        totalWeight = parseInt(rejectedWeight) + parseInt(hardOrganicWeight) + parseInt(organicWeight) + parseInt(inOrganicWeight)\r\n        let intTotalWeight = parseInt(totalWeight)\r\n        if (intTotalWeight <= 0) {\r\n            totalWeight = 0\r\n        }\r\n        setTotalWeight(totalWeight)\r\n    }, [rejectedWeight, hardOrganicWeight, organicWeight, inOrganicWeight])\r\n\r\n    return (\r\n        <form className={Appclasses.p20} onSubmit={handleSubmitWaste}>\r\n            <Grid\r\n                container\r\n                className={`${Appclasses.flexCenter} ${Appclasses.alignCenter} ${Appclasses.gap16}`}\r\n                direction=\"column\"\r\n            >\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <Form\r\n                        id=\"deliveryId\"\r\n                        label=\"Delivery ID\"\r\n                        value={deliveryId}\r\n                        disabled={true}\r\n                    />\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <Form\r\n                        id=\"date\"\r\n                        label=\"Date\"\r\n                        value={date}\r\n                        onChange={e => setDate(e.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"licensePlate\"\r\n                            label=\"License Plate\"\r\n                            value={licensePlate}\r\n                            onChange={e => setLicensePlate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"organicWeight\"\r\n                            label=\"Organic Weight\"\r\n                            value={organicWeight}\r\n                            onChange={e => setOrganicWeight(e.target.value === \"0\" || e.target.value === \"\" ? \"0\" : parseInt(e.target.value))}\r\n                        />\r\n                        <div>\r\n                            KG\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"inOrganicWeight\"\r\n                            label=\"Inorganic Weight\"\r\n                            value={inOrganicWeight}\r\n                            onChange={e => setInOrganicWeight(e.target.value === \"0\" || e.target.value === \"\" ? \"0\" : parseInt(e.target.value))}\r\n                        />\r\n                        <div>\r\n                            KG\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"hardOrganicWeight\"\r\n                            label=\"Hard Organic Weight\"\r\n                            value={hardOrganicWeight}\r\n                            onChange={e => setHardOrganicWeight(e.target.value === \"0\" || e.target.value === \"\" ? \"0\" : parseInt(e.target.value))}\r\n                        />\r\n                        <div>\r\n                            KG\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"rejectedWeight\"\r\n                            label=\"Rejected Weight\"\r\n                            value={rejectedWeight}\r\n                            onChange={e => setRejectredWeight(e.target.value === \"0\" || e.target.value === \"\" ? \"0\" : parseInt(e.target.value))}\r\n                        />\r\n                        <div>\r\n                            KG\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={Appclasses.fullWidth} item>\r\n                    <div className={`${Appclasses.alignCenter} ${Appclasses.flex} ${Appclasses.gap8}`} style={{ display: \"flex\" }}>\r\n                        <Form\r\n                            id=\"note\"\r\n                            label=\"Note\"\r\n                            value={note}\r\n                            onChange={e => setNote(e.target.value)}\r\n                        />\r\n                        <div>\r\n                            KG\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n\r\n                <Grid className={`${Appclasses.fullWidth} ${Appclasses.flexEnd}`} item>\r\n                    Total Weight {totalWeight} KG\r\n                </Grid>\r\n\r\n                <Grid className={`${Appclasses.fullWidth} ${Appclasses.gap8}`} item >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <Button className={`${Appclasses.fullWidth}`} variant=\"contained\">\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Button className={`${Appclasses.fullWidth}`} variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                Process Waste\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateComposePackage;","import { Each } from \"../Components/Each/Each\";\nimport MainPage from \"../Pages/MainPage\";\nimport ListPage from \"../Pages/ListPage\";\nimport MenuPage from \"../Pages/MenuPage\";\nimport ProcessWastePage from \"../Pages/ProcessWastePage\";\nimport ListOfWastePage from \"../Pages/ListOfWastePage\";\nimport { ROUTE_PATH } from \"../Constants/RoutePath\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AddInboundPage from \"../Pages/AddInboundPage\";\nimport ComposePackage from \"../Pages/ComposePackage\";\nimport CreateComposePackage from \"../Pages/CreateComposePackage\";\n\nconst MAIN_ROUTES = [\n    {\n        path: ROUTE_PATH.MAIN,\n        exact: true,\n        component: () => <MenuPage />\n    },\n    {\n        path: ROUTE_PATH.LIST,\n        component: () => <ListPage />\n    },\n    {\n        path: ROUTE_PATH.DASHBOARD,\n        exact: true,\n        component: () => <MainPage />\n    },\n    {\n        path: ROUTE_PATH.ADDINBOUND,\n        exact: true,\n        component: () => <AddInboundPage />\n    },\n    {\n        path: ROUTE_PATH.PROCESS_WASTE,\n        exact: true,\n        component: () => <ProcessWastePage />\n    },\n    {\n        path: ROUTE_PATH.LIST_OF_WASTE,\n        exact: true,\n        component: () => <ListOfWastePage />\n    },\n    {\n        path: ROUTE_PATH.COMPOSEPACKGE,\n        exact: true,\n        component: () => <ComposePackage />\n    },\n    {\n        path: ROUTE_PATH.CREATECOMPOSEPACKAGE,\n        exact: true,\n        component: () => <CreateComposePackage />\n    },\n]\n\nexport const RenderRoutes = () => {\n    return (\n        <Switch>\n            <Each of={MAIN_ROUTES} render={(route, i) =>\n                <Route\n                    path={route.path}\n                    exact={route.exact}\n                    render={props => <route.component {...props} routes={route.routes} />}\n                />\n            } />\n        </Switch>\n    );\n}","import './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport { RenderRoutes } from './Routes/RoutesConfig';\nimport { HashRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\n\n//Inter\nimport \"@fontsource/inter\";\nimport { createContext, useEffect, useState } from 'react';\nimport { NAVBAR_TITLE } from './Constants/NavbarTitle';\nimport { ROUTE_PATH } from './Constants/RoutePath';\n\nexport const AppContext = createContext({})\n\nfunction App() {\n  let history = useHistory();\n  const [isNavbarBack, setIsNavbarBack] = useState(true)\n  const [navbarTitle, setNavbarTitle] = useState(NAVBAR_TITLE.HOME)\n\n  const AppContextValue = {\n    setIsNavbarBack,\n    isNavbarBack,\n    setNavbarTitle,\n    navbarTitle\n  }\n\n  return (\n    <AppContext.Provider\n      value={AppContextValue}\n    >\n      <div>\n        <Navbar />\n        <Router>\n          <RenderRoutes />\n        </Router>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}